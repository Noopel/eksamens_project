{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/WebDev/eksamens_project/eksamens_project_frontend/src/components/ui/Container.tsx"],"sourcesContent":["import { ComponentProps} from \"react\";\r\n\r\nconst Container = (props: ComponentProps<\"article\"> ) => {\r\n  return <article {...props} className={`mx-auto container ${props.className}`}>{props.children}</article>;\r\n};\r\n\r\nexport default Container;\r\n"],"names":[],"mappings":";;;;;AAEA,MAAM,YAAY,CAAC;IACjB,qBAAO,6LAAC;QAAS,GAAG,KAAK;QAAE,WAAW,CAAC,kBAAkB,EAAE,MAAM,SAAS,EAAE;kBAAG,MAAM,QAAQ;;;;;;AAC/F;KAFM;uCAIS"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file://D%3A/WebDev/eksamens_project/eksamens_project_frontend/src/components/ui/slideshow/Slideshow.tsx"],"sourcesContent":["\"use client\";\r\nimport { Children, Dispatch, SetStateAction, useEffect } from \"react\";\r\n\r\ntype SlideshowProps = {\r\n  index: number;\r\n  setIndex?: Dispatch<SetStateAction<number>>;\r\n  children?: React.ReactNode;\r\n  autoplay?: boolean;\r\n  slideDuration?: number;\r\n  transitionDuration?: number;\r\n};\r\n\r\nconst Slideshow = ({ children, index, setIndex, autoplay, slideDuration = 5, transitionDuration = 0.3 }: SlideshowProps) => {\r\n  useEffect(() => {\r\n    if (!autoplay) return;\r\n    if (!setIndex) {\r\n      throw Error(\"A slideshow with autoplay enabled requires a way to set the index! Provide the setIndex function for it to work\");\r\n    }\r\n\r\n    let timeout = setTimeout(() => {\r\n      let newIndex = index + 1;\r\n      if (newIndex > Children.count(children) - 1) newIndex = 0;\r\n\r\n      setIndex(newIndex);\r\n    }, slideDuration * 1000);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [index, autoplay]);\r\n\r\n  return (\r\n    <section className=\"w-full h-auto overflow-hidden\">\r\n      <article\r\n        className={\"flex relative w-full transition-all flex-shrink-0\"}\r\n        style={{\r\n          left: `${-100 * index}%`,\r\n          transitionDuration: `${transitionDuration}s`,\r\n        }}\r\n      >\r\n        {Children.map(children, (child, i) => (\r\n          <div id={i + \"slideshow\" + String(child)} className={`w-full h-full flex-shrink-0 transition-all`}>\r\n            {child}\r\n          </div>\r\n        ))}\r\n      </article>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Slideshow;\r\n"],"names":[],"mappings":";;;;AACA;;;AADA;;AAYA,MAAM,YAAY,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,gBAAgB,CAAC,EAAE,qBAAqB,GAAG,EAAkB;;IACrH,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,IAAI,CAAC,UAAU;YACf,IAAI,CAAC,UAAU;gBACb,MAAM,MAAM;YACd;YAEA,IAAI,UAAU;+CAAW;oBACvB,IAAI,WAAW,QAAQ;oBACvB,IAAI,WAAW,6JAAA,CAAA,WAAQ,CAAC,KAAK,CAAC,YAAY,GAAG,WAAW;oBAExD,SAAS;gBACX;8CAAG,gBAAgB;YAEnB;uCAAO,IAAM,aAAa;;QAC5B;8BAAG;QAAC;QAAO;KAAS;IAEpB,qBACE,6LAAC;QAAQ,WAAU;kBACjB,cAAA,6LAAC;YACC,WAAW;YACX,OAAO;gBACL,MAAM,GAAG,CAAC,MAAM,MAAM,CAAC,CAAC;gBACxB,oBAAoB,GAAG,mBAAmB,CAAC,CAAC;YAC9C;sBAEC,6JAAA,CAAA,WAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,kBAC9B,6LAAC;oBAAI,IAAI,IAAI,cAAc,OAAO;oBAAQ,WAAW,CAAC,0CAA0C,CAAC;8BAC9F;;;;;;;;;;;;;;;;AAMb;GAlCM;KAAA;uCAoCS"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file://D%3A/WebDev/eksamens_project/eksamens_project_frontend/src/components/ui/slideshow/ExampleSlideshow.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport Slideshow from \"./Slideshow\";\r\nimport Image from \"next/image\";\r\n\r\nconst imagePath = \"https://wbdxiyoavhnrljziixqc.supabase.co/storage/v1/object/public/images//\";\r\nconst slideImages = [\r\n  \"hsr_himeko.png\",\r\n  \"hsr_guinaifen.png\",\r\n  \"hsr_jingliu.png\",\r\n  \"hsr_kafka.png\",\r\n  \"hsr_luocha.png\",\r\n  \"hsr_topaz.png\",\r\n  \"hsr_welt.png\",\r\n];\r\n\r\nconst ExampleSlideshow = () => {\r\n  const [index, setIndex] = useState<number>(0);\r\n\r\n  function nextSlide() {\r\n    if (index + 1 > slideImages.length - 1) {\r\n      setIndex(0);\r\n    } else {\r\n      setIndex(index + 1);\r\n    }\r\n  }\r\n\r\n  function prevSlide() {\r\n    if (index - 1 < 0) {\r\n      setIndex(slideImages.length - 1);\r\n    } else {\r\n      setIndex(index - 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <article className=\"w-60 relative flex flex-col items-center gap-2 p-2 bg-neutral-800 mx-auto rounded-lg mt-4\">\r\n      <section className=\"relative flex\">\r\n        <Slideshow index={index} setIndex={setIndex} autoplay slideDuration={20}>\r\n          {slideImages.map((img, i) => (\r\n            <Image key={img+i+\"exampleslider1\"} src={imagePath + img} alt=\"Alternative text\" height={99999} width={99999} />\r\n          ))}\r\n        </Slideshow>\r\n        {/* Example of the buttons being inside the container using position relative/absolute */}\r\n        <div className=\"flex justify-between items-center gap-1 w-full h-full absolute bg-gradient-to-r from-[rgba(0,0,0,0.2)] via-transparent to-[rgba(0,0,0,0.2)]\">\r\n          <button onClick={() => prevSlide()} className=\"py-2 px-3 bg-[rgba(0,0,0,0.6)] text-white rounded-md\">\r\n            {\"<\"}\r\n          </button>\r\n          <button onClick={() => nextSlide()} className=\"py-2 px-3 bg-[rgba(0,0,0,0.6)] text-white rounded-md\">\r\n            {\">\"}\r\n          </button>\r\n        </div>\r\n        {/* Example END */}\r\n      </section>\r\n      {/* Example small index buttons */}\r\n      <section className=\"flex gap-2\">\r\n        {slideImages.map((_, i) => (\r\n          <button\r\n            className={`bg-blue-400 rounded-full w-3 h-3 transition-colors duration-300 ${\r\n              i === index ? \"bg-blue-600\" : \"\"\r\n            }`}\r\n            onClick={() => setIndex(i)}\r\n          />\r\n        ))}\r\n      </section>\r\n      {/* Example END */}\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default ExampleSlideshow;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;AAEA,MAAM,YAAY;AAClB,MAAM,cAAc;IAClB;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAM,mBAAmB;;IACvB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAE3C,SAAS;QACP,IAAI,QAAQ,IAAI,YAAY,MAAM,GAAG,GAAG;YACtC,SAAS;QACX,OAAO;YACL,SAAS,QAAQ;QACnB;IACF;IAEA,SAAS;QACP,IAAI,QAAQ,IAAI,GAAG;YACjB,SAAS,YAAY,MAAM,GAAG;QAChC,OAAO;YACL,SAAS,QAAQ;QACnB;IACF;IAEA,qBACE,6LAAC;QAAQ,WAAU;;0BACjB,6LAAC;gBAAQ,WAAU;;kCACjB,6LAAC,qJAAA,CAAA,UAAS;wBAAC,OAAO;wBAAO,UAAU;wBAAU,QAAQ;wBAAC,eAAe;kCAClE,YAAY,GAAG,CAAC,CAAC,KAAK,kBACrB,6LAAC,gIAAA,CAAA,UAAK;gCAA8B,KAAK,YAAY;gCAAK,KAAI;gCAAmB,QAAQ;gCAAO,OAAO;+BAA3F,MAAI,IAAE;;;;;;;;;;kCAItB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAO,SAAS,IAAM;gCAAa,WAAU;0CAC3C;;;;;;0CAEH,6LAAC;gCAAO,SAAS,IAAM;gCAAa,WAAU;0CAC3C;;;;;;;;;;;;;;;;;;0BAMP,6LAAC;gBAAQ,WAAU;0BAChB,YAAY,GAAG,CAAC,CAAC,GAAG,kBACnB,6LAAC;wBACC,WAAW,CAAC,gEAAgE,EAC1E,MAAM,QAAQ,gBAAgB,IAC9B;wBACF,SAAS,IAAM,SAAS;;;;;;;;;;;;;;;;;AAOpC;GApDM;KAAA;uCAsDS"}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file://D%3A/WebDev/eksamens_project/eksamens_project_frontend/src/components/ui/slideshow/SlideshowInfinite.tsx"],"sourcesContent":["\"use client\";\r\nimport { Children, Dispatch, SetStateAction, useEffect } from \"react\";\r\n\r\ntype TransitionProperties = {\r\n  duration?: number;\r\n  easing?: string;\r\n  delay?: number;\r\n};\r\n\r\ntype SlideshowProps = {\r\n  index: number;\r\n  setIndex?: Dispatch<SetStateAction<number>>;\r\n  children?: React.ReactNode;\r\n  autoplay?: boolean;\r\n  slideDuration?: number;\r\n  transition?: TransitionProperties;\r\n  opacityTransition?: boolean;\r\n  id?: string;\r\n  className?: string;\r\n  playOnRender?: boolean;\r\n};\r\n\r\nconst NO_INDEX_ERROR_MESSAGE = \"A slideshow with autoplay enabled requires a way to set the index! Provide the setIndex function for it to work\";\r\n\r\nconst SlideshowInfinite = ({ id, className, children, index, setIndex, autoplay, slideDuration = 5, transition, opacityTransition = true, playOnRender }: SlideshowProps) => {\r\n  const childCount = Children.count(children);\r\n  const middleElementIndex = Math.floor(childCount / 2);\r\n\r\n  function nextSlide(nextIndex: number) {\r\n    if (!setIndex) return;\r\n    if (nextIndex > childCount - 1) nextIndex = 0;\r\n    setIndex(nextIndex);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!autoplay) return;\r\n    if (!setIndex) throw Error(NO_INDEX_ERROR_MESSAGE);\r\n    if (playOnRender) nextSlide(index + 1);\r\n    \r\n    let timeout = setTimeout(() => nextSlide(index + 1), slideDuration * 1000)\r\n    return () => clearTimeout(timeout);\r\n  }, [index, autoplay]);\r\n\r\n  return (\r\n    <section id={id || \"\"} className={\"flex relative w-full h-auto flex-shrink-0 overflow-hidden \" + (className || \"\")}>\r\n      {children &&\r\n        Children.map(children, (child, i) => {\r\n          let indexOffset = index - i + middleElementIndex;\r\n\r\n          if (indexOffset < 0) {\r\n            indexOffset = childCount + indexOffset;\r\n          } else if (indexOffset > childCount - 1) {\r\n            indexOffset = indexOffset - childCount;\r\n          }\r\n\r\n          return (\r\n            <div\r\n              key={i + \"slideshow\" + String(child)}\r\n              className={\"w-full h-full flex-shrink-0\" + (opacityTransition ? \" [transition:transform,opacity]\" : \" [transition:transform]\")}\r\n              style={{\r\n                zIndex: Math.min(indexOffset - middleElementIndex + 1, (indexOffset - middleElementIndex) * -1 + 1, 0),\r\n                transform: `translateX(${-100 * i + 100 * (middleElementIndex - indexOffset)}%)`,\r\n                opacity: index != i && opacityTransition ? 0 : 1,\r\n                transitionDuration: `${transition?.duration || 0.3}s`,\r\n                transitionTimingFunction: transition?.easing || \"ease\",\r\n                transitionDelay: `${transition?.delay || 0}s`,\r\n              }}\r\n            >\r\n              {child}\r\n            </div>\r\n          );\r\n        })}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SlideshowInfinite;\r\n"],"names":[],"mappings":";;;;AACA;;;AADA;;AAsBA,MAAM,yBAAyB;AAE/B,MAAM,oBAAoB,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,gBAAgB,CAAC,EAAE,UAAU,EAAE,oBAAoB,IAAI,EAAE,YAAY,EAAkB;;IACtK,MAAM,aAAa,6JAAA,CAAA,WAAQ,CAAC,KAAK,CAAC;IAClC,MAAM,qBAAqB,KAAK,KAAK,CAAC,aAAa;IAEnD,SAAS,UAAU,SAAiB;QAClC,IAAI,CAAC,UAAU;QACf,IAAI,YAAY,aAAa,GAAG,YAAY;QAC5C,SAAS;IACX;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;uCAAE;YACR,IAAI,CAAC,UAAU;YACf,IAAI,CAAC,UAAU,MAAM,MAAM;YAC3B,IAAI,cAAc,UAAU,QAAQ;YAEpC,IAAI,UAAU;uDAAW,IAAM,UAAU,QAAQ;sDAAI,gBAAgB;YACrE;+CAAO,IAAM,aAAa;;QAC5B;sCAAG;QAAC;QAAO;KAAS;IAEpB,qBACE,6LAAC;QAAQ,IAAI,MAAM;QAAI,WAAW,+DAA+D,CAAC,aAAa,EAAE;kBAC9G,YACC,6JAAA,CAAA,WAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO;YAC7B,IAAI,cAAc,QAAQ,IAAI;YAE9B,IAAI,cAAc,GAAG;gBACnB,cAAc,aAAa;YAC7B,OAAO,IAAI,cAAc,aAAa,GAAG;gBACvC,cAAc,cAAc;YAC9B;YAEA,qBACE,6LAAC;gBAEC,WAAW,gCAAgC,CAAC,oBAAoB,oCAAoC,yBAAyB;gBAC7H,OAAO;oBACL,QAAQ,KAAK,GAAG,CAAC,cAAc,qBAAqB,GAAG,CAAC,cAAc,kBAAkB,IAAI,CAAC,IAAI,GAAG;oBACpG,WAAW,CAAC,WAAW,EAAE,CAAC,MAAM,IAAI,MAAM,CAAC,qBAAqB,WAAW,EAAE,EAAE,CAAC;oBAChF,SAAS,SAAS,KAAK,oBAAoB,IAAI;oBAC/C,oBAAoB,GAAG,YAAY,YAAY,IAAI,CAAC,CAAC;oBACrD,0BAA0B,YAAY,UAAU;oBAChD,iBAAiB,GAAG,YAAY,SAAS,EAAE,CAAC,CAAC;gBAC/C;0BAEC;eAXI,IAAI,cAAc,OAAO;;;;;QAcpC;;;;;;AAGR;GAlDM;KAAA;uCAoDS"}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file://D%3A/WebDev/eksamens_project/eksamens_project_frontend/src/components/ui/slideshow/ExampleSlideshowInfinite.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport Image from \"next/image\";\r\nimport SlideshowInfinite from \"./SlideshowInfinite\";\r\n\r\nconst imagePath = \"https://wbdxiyoavhnrljziixqc.supabase.co/storage/v1/object/public/images//\";\r\nconst slideImages = [\r\n  \"hsr_himeko.png\",\r\n  \"hsr_guinaifen.png\",\r\n  \"hsr_jingliu.png\",\r\n  \"hsr_kafka.png\",\r\n  \"hsr_luocha.png\",\r\n  \"hsr_topaz.png\",\r\n  \"hsr_welt.png\",\r\n];\r\n\r\nconst ExampleSlideshowInfinite = () => {\r\n  const [index, setIndex] = useState<number>(0);\r\n\r\n  function nextSlide() {\r\n    if (index + 1 > slideImages.length - 1) {\r\n      setIndex(0);\r\n    } else {\r\n      setIndex(index + 1);\r\n    }\r\n  }\r\n\r\n  function prevSlide() {\r\n    if (index - 1 < 0) {\r\n      setIndex(slideImages.length - 1);\r\n    } else {\r\n      setIndex(index - 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <article className=\"w-60 relative flex flex-col items-center gap-2 p-2 bg-neutral-800 mx-auto rounded-lg mt-4\">\r\n      <section className=\"relative flex\">\r\n        <SlideshowInfinite index={index} setIndex={setIndex} autoplay>\r\n          {slideImages.map((img, i) => (\r\n            <Image key={img+i} src={imagePath + img} alt=\"Alternative text\" height={99999} width={99999} />\r\n          ))}\r\n        </SlideshowInfinite>\r\n        {/* Example of the buttons being inside the container using position relative/absolute */}\r\n        <div className=\"flex justify-between items-center gap-1 w-full h-full absolute bg-gradient-to-r from-[rgba(0,0,0,0.2)] via-transparent to-[rgba(0,0,0,0.2)]\">\r\n          <button onClick={() => prevSlide()} className=\"py-2 px-3 bg-[rgba(0,0,0,0.6)] text-white rounded-md\">\r\n            {\"<\"}\r\n          </button>\r\n          <button onClick={() => nextSlide()} className=\"py-2 px-3 bg-[rgba(0,0,0,0.6)] text-white rounded-md\">\r\n            {\">\"}\r\n          </button>\r\n        </div>\r\n        {/* Example END */}\r\n      </section>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default ExampleSlideshowInfinite;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;AAEA,MAAM,YAAY;AAClB,MAAM,cAAc;IAClB;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAM,2BAA2B;;IAC/B,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAE3C,SAAS;QACP,IAAI,QAAQ,IAAI,YAAY,MAAM,GAAG,GAAG;YACtC,SAAS;QACX,OAAO;YACL,SAAS,QAAQ;QACnB;IACF;IAEA,SAAS;QACP,IAAI,QAAQ,IAAI,GAAG;YACjB,SAAS,YAAY,MAAM,GAAG;QAChC,OAAO;YACL,SAAS,QAAQ;QACnB;IACF;IAEA,qBACE,6LAAC;QAAQ,WAAU;kBACjB,cAAA,6LAAC;YAAQ,WAAU;;8BACjB,6LAAC,6JAAA,CAAA,UAAiB;oBAAC,OAAO;oBAAO,UAAU;oBAAU,QAAQ;8BAC1D,YAAY,GAAG,CAAC,CAAC,KAAK,kBACrB,6LAAC,gIAAA,CAAA,UAAK;4BAAa,KAAK,YAAY;4BAAK,KAAI;4BAAmB,QAAQ;4BAAO,OAAO;2BAA1E,MAAI;;;;;;;;;;8BAIpB,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAO,SAAS,IAAM;4BAAa,WAAU;sCAC3C;;;;;;sCAEH,6LAAC;4BAAO,SAAS,IAAM;4BAAa,WAAU;sCAC3C;;;;;;;;;;;;;;;;;;;;;;;AAOb;GAxCM;KAAA;uCA0CS"}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 442, "column": 0}, "map": {"version":3,"sources":["file://D%3A/WebDev/eksamens_project/eksamens_project_frontend/src/app/%28home%29/page.tsx"],"sourcesContent":["\"use client\";\r\nimport Container from \"@/components/ui/Container\";\r\nimport ExampleSlideshow from \"@/components/ui/slideshow/ExampleSlideshow\";\r\nimport ExampleSlideshowInfinite from \"@/components/ui/slideshow/ExampleSlideshowInfinite\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main>\r\n      <Container>\r\n        <ExampleSlideshow />\r\n        <ExampleSlideshowInfinite />\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAKA,MAAM,OAAO;IACX,qBACE,6LAAC;kBACC,cAAA,6LAAC,wIAAA,CAAA,UAAS;;8BACR,6LAAC,4JAAA,CAAA,UAAgB;;;;;8BACjB,6LAAC,oKAAA,CAAA,UAAwB;;;;;;;;;;;;;;;;AAIjC;KATM;uCAWS"}},
    {"offset": {"line": 487, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}