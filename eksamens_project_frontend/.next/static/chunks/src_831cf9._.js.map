{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/WebDev/eksamens_project/eksamens_project_frontend/src/components/LightBox.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { MouseEvent, useState } from \"react\";\r\n\r\nconst LightBox = ({ images, baseUrl }: { images: string[]; baseUrl: string }) => {\r\n  const [imageToShow, setImageToShow] = useState<string>(\"\");\r\n  const [lightboxDisplay, setLightBoxDisplay] = useState(false);\r\n\r\n  //function to show a specific image in the lightbox, amd make lightbox visible\r\n  const showImage = (image: string) => {\r\n    setImageToShow(image);\r\n    setLightBoxDisplay(true);\r\n  };\r\n\r\n  //hide lightbox\r\n  const hideLightBox = () => {\r\n    setLightBoxDisplay(false);\r\n  };\r\n\r\n  //show next image in lightbox\r\n  const showNext = (e: MouseEvent<HTMLButtonElement>) => {\r\n    e.stopPropagation();\r\n    let currentIndex = images.indexOf(imageToShow);\r\n    if (currentIndex >= images.length - 1) {\r\n      setLightBoxDisplay(false);\r\n    } else {\r\n      let nextImage = images[currentIndex + 1];\r\n      setImageToShow(nextImage);\r\n    }\r\n  };\r\n\r\n  //show previous image in lightbox\r\n  const showPrev = (e: MouseEvent<HTMLButtonElement>) => {\r\n    e.stopPropagation();\r\n    let currentIndex = images.indexOf(imageToShow);\r\n    if (currentIndex <= 0) {\r\n      setLightBoxDisplay(false);\r\n    } else {\r\n      let nextImage = images[currentIndex - 1];\r\n      setImageToShow(nextImage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex\">\r\n        {images.map((image, i) => (\r\n          <img key={`${image}-${i}`} className=\"w-1/3 h-auto object-cover\" onClick={() => showImage(image)} src={`${baseUrl}${image}`} />\r\n        ))}\r\n      </div>\r\n\r\n      {lightboxDisplay ? (\r\n        <div className=\"z-[1] fixed top-0 left-0 w-full h-full bg-opacity-50 flex items-center justify-between\" onClick={hideLightBox}>\r\n          <button onClick={showPrev}>тна</button>\r\n          <img className=\"h-[80vh] max-h-[90vw] object-cover\" src={imageToShow}></img>\r\n          <button onClick={showNext}>тнв</button>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LightBox;\r\n"],"names":[],"mappings":";;;;AACA;;;AADA;;AAGA,MAAM,WAAW,CAAC,EAAE,MAAM,EAAE,OAAO,EAAyC;;IAC1E,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACvD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvD,8EAA8E;IAC9E,MAAM,YAAY,CAAC;QACjB,eAAe;QACf,mBAAmB;IACrB;IAEA,eAAe;IACf,MAAM,eAAe;QACnB,mBAAmB;IACrB;IAEA,6BAA6B;IAC7B,MAAM,WAAW,CAAC;QAChB,EAAE,eAAe;QACjB,IAAI,eAAe,OAAO,OAAO,CAAC;QAClC,IAAI,gBAAgB,OAAO,MAAM,GAAG,GAAG;YACrC,mBAAmB;QACrB,OAAO;YACL,IAAI,YAAY,MAAM,CAAC,eAAe,EAAE;YACxC,eAAe;QACjB;IACF;IAEA,iCAAiC;IACjC,MAAM,WAAW,CAAC;QAChB,EAAE,eAAe;QACjB,IAAI,eAAe,OAAO,OAAO,CAAC;QAClC,IAAI,gBAAgB,GAAG;YACrB,mBAAmB;QACrB,OAAO;YACL,IAAI,YAAY,MAAM,CAAC,eAAe,EAAE;YACxC,eAAe;QACjB;IACF;IAEA,qBACE;;0BACE,6LAAC;gBAAI,WAAU;0BACZ,OAAO,GAAG,CAAC,CAAC,OAAO,kBAClB,6LAAC;wBAA0B,WAAU;wBAA4B,SAAS,IAAM,UAAU;wBAAQ,KAAK,GAAG,UAAU,OAAO;uBAAjH,GAAG,MAAM,CAAC,EAAE,GAAG;;;;;;;;;;YAI5B,gCACC,6LAAC;gBAAI,WAAU;gBAAyF,SAAS;;kCAC/G,6LAAC;wBAAO,SAAS;kCAAU;;;;;;kCAC3B,6LAAC;wBAAI,WAAU;wBAAqC,KAAK;;;;;;kCACzD,6LAAC;wBAAO,SAAS;kCAAU;;;;;;;;;;;uBAG7B;;;AAIR;GA1DM;KAAA;uCA4DS"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file://D%3A/WebDev/eksamens_project/eksamens_project_frontend/src/hooks/queries/useGalleryQuery.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\n\r\nexport type GalleryData = {\r\n    _id: string,\r\n    imagetext: string,\r\n    image: string,\r\n    __v: number\r\n}\r\n\r\nexport const useGalleryQuery = () => {\r\n  return useQuery<GalleryData[]>({\r\n    queryKey: [\"galleryQuery\"],\r\n    staleTime: 1000 * 60 * 1,\r\n    \r\n    queryFn: async () => {\r\n      const response = await fetch(\"http://localhost:4444/gallery\");\r\n      return await response.json();\r\n    },\r\n  });\r\n};\r\n"],"names":[],"mappings":";;;AAAA;;;AASO,MAAM,kBAAkB;;IAC7B,OAAO,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAAiB;QAC7B,UAAU;YAAC;SAAe;QAC1B,WAAW,OAAO,KAAK;QAEvB,OAAO;wCAAE;gBACP,MAAM,WAAW,MAAM,MAAM;gBAC7B,OAAO,MAAM,SAAS,IAAI;YAC5B;;IACF;AACF;GAVa;;QACJ,8KAAA,CAAA,WAAQ"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file://D%3A/WebDev/eksamens_project/eksamens_project_frontend/src/app/%28home%29/galleri/page.tsx"],"sourcesContent":["\"use client\";\r\nimport LightBox from \"@/components/LightBox\";\r\nimport { useGalleryQuery } from \"@/hooks/queries/useGalleryQuery\";\r\nimport React from \"react\";\r\n\r\nconst GalleriPage = () => {\r\n  const { data, isLoading, isError } = useGalleryQuery();\r\n\r\n  return <main>{data && <LightBox images={data.map((galleryData) => galleryData.image)} baseUrl=\"http://localhost:4444/images/gallery/\" />}</main>;\r\n};\r\n\r\nexport default GalleriPage;\r\n"],"names":[],"mappings":";;;;AACA;AACA;;;AAFA;;;AAKA,MAAM,cAAc;;IAClB,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,6IAAA,CAAA,kBAAe,AAAD;IAEnD,qBAAO,6LAAC;kBAAM,sBAAQ,6LAAC,iIAAA,CAAA,UAAQ;YAAC,QAAQ,KAAK,GAAG,CAAC,CAAC,cAAgB,YAAY,KAAK;YAAG,SAAQ;;;;;;;;;;;AAChG;GAJM;;QACiC,6IAAA,CAAA,kBAAe;;;KADhD;uCAMS"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}